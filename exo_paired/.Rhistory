setwd('../multioms')
ls
ls()
all_samples_gene.SummarizedExperiment <- readRDS("D:/Users/Пользователь/Desktop/lab_jur/multioms/all_samples_gene.SummarizedExperiment.rds")
salmon_output <- readRDS(all_samples_gene.SummarizedExperiment)
salmon_output <- readRDS('all_samples_gene.SummarizedExperiment')
salmon_output <- readRDS('all_samples_gene.SummarizedExperiment.rds')
rm(all_samples_gene.SummarizedExperiment)
View(salmon_output)
salmon_output$sample
salmon_output$fastq_1
salmon_output
salmon_output$assays
class(salmon_output)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SummarizedExperiment")
library(SummarizedExperiment)
counts(salmon_output)
salmon_output <- readRDS('all_samples_gene.SummarizedExperiment.rds')
assay(salmon_output)
dim(assay(salmon_output))
tpms <- assay(salmon_output)
View(tpms)
class(tpms)
28*0.3
library(tidyverse)
gc()
tpms %>%
rowwise() %>%
filter(sum(c_across(everything()) == 0) / ncol(cur_data()) <= 0.3) %>% dim()
head(tpms)
filtered_df <- tpms %>%
filter(rowSums() / ncol() <= 0.3)
filtered_df <- tpms %>%
filter(rowSums(.) / ncol(.) <= 0.3)
View(filtered_df)
sum(filtered_df[,1])
sum(filtered_df[1,])
filtered_df <- tpms %>%
filter(rowSums(.) / ncol(.) > 0.3)
View(filtered_df)
filtered_df <- tpms %>%
filter(rowSums(.) / ncol(.) <= 0.3)
View(filtered_df)
rowsum(tpms)
tpms %>% rowsums()
rowSums(tpms)
filtered_df <- tpms %>% filter(sum(.==0)>0.3)
View(filtered_df)
?rowSums
rowSums(tpms)
rowSums(tpms==0)
rowSums(tpms==0) %>% table()
filtered_df <- tpms %>% filter((rowSums(.==0)/ncol(.))<0.3)
View(filtered_df)
tpms %>% filter((rowSums(.==0)/ncol(.))<0.3)
filtered_df <- tpms %>% filter((rowSums(.==0)/ncol(.))>0.3)
tpms %>% filter((rowSums(.==0)/ncol(.))>0.3)
filtered_df <- tpms %>% filter((rowSums(.==0)/28)>0.3)
tpms %>% rowSums(.==0)
rowSums
rowSums(tpms==0)
rowSums(tpms==0)/28
which(rowSums(tpms==0)/28>0.3)
which((rowSums(tpms==0)/28)>0.3)
filtered_df <- tpms %>% select(which((rowSums(tpms==0)/28)>0.3))
filtered_df <- tpms %>% filter(which((rowSums(tpms==0)/28)>0.3))
filtered_df <- tpms %>% slice(which((rowSums(tpms==0)/28)>0.3))
View(filtered_df)
(rowSums(tpms==0)/28)
rowSums(tpms==0)/28)>0.3
(rowSums(tpms==0)/28)>0.3
filtered_df <- tpms %>% slice((rowSums(tpms==0)/28)>0.3)
filtered_df <- tpms %>% filter((rowSums(tpms==0)/28)>0.3)
View(filtered_df)
View(tpms)
tpms[1,]
rowSums(tpms[,1==0)
rowSums(tpms[1,]==0)
rowSums(tpms[ENSG00000004848.8,]==0)
rowSums(tpms[ENSG00000004848.8]==0)
rowSums(tpms['ENSG00000004848.8',]==0)
rowSums(tpms['ENSG00000004848.8',]==0)/28
filtered_df <- tpms %>% filter((rowSums(tpms==0)/28)<0.3)
View(filtered_df)
filtered_df <- tpms %>% filter((rowSums(tpms==0)/ncol())<0.3)
filtered_df <- tpms %>% filter((rowSums(tpms==0)/ncol(tpms))<0.3)
filtered_df <- tpms %>% filter((rowSums(tpms==0)/28)<0.3)
rm(filtered_df)
filtered_tpms <- tpms %>% filter((rowSums(tpms==0)/ncol(tpms))<0.3)
BiocManager::install("ConsensusClusterPlus")
library(ConsensusClusterPlus)
library(ALL)
source("~/.active-rstudio-document", echo=TRUE)
as.matrix(filtered_tpms)
icl  <-  calcICL(as.matrix(filtered_tpms),title='conc_clust',plot="png")
tempdir()
? ConsensusClusterPlus
results <- ConsensusClusterPlus(d=filtered_tpms, maxK = 10)
results <- ConsensusClusterPlus(d=as.matrix(filtered_tpms), maxK = 10)
icl  <-  calcICL(results,title='conc_clust',plot="png")
results <- ConsensusClusterPlus(d=as.matrix(filtered_tpms), maxK = 10, reps=50)
results <- ConsensusClusterPlus(d=as.matrix(filtered_tpms), maxK = 10, reps=50, pItem=0.7, plot='png')
icl  <-  calcICL(results,title='conc_clust',plot="png")
icl  <-  calcICL(results,title='conc_clust',plot="png")
results <- ConsensusClusterPlus(d=as.matrix(filtered_tpms), maxK = 10, reps=50, pItem=0.7, clusterAlg='km')
icl  <-  calcICL(results,title='conc_clust_km',plot="png")
?cpm
??cpm
?kmeans
km <- kmeans(as.matrix(filtered_tpms), centers = 4, iter.max = 1000)
km
km %>% table()
km %>% t() %>% table()
km <- kmeans(t(as.matrix(filtered_tpms)), centers = 4, iter.max = 1000)
km
km$cluster
class(km$cluster)
View(km)
km <- kmeans(t(as.matrix(filtered_tpms)), centers = 4, iter = 1000)
km
km$iter
km$ifault
View(km)
sd(filtered_tpms)
summary(filtered_tpms)
sd(filtered_tpms[1,])
sd(filtered_tpms)
rowSds(filtered_tpms)
rowSds(as.matrix(filtered_tpms))
rowSds(as.matrix(filtered_tpms)) %>% sort() %>% head(n=15)
rowSds(as.matrix(filtered_tpms)) %>% sort() %>% head(n=1000)
rowSds(as.matrix(filtered_tpms)) %>% sort(decreasing = T) %>% head(n=1000)
rowSds(as.matrix(filtered_tpms)) %>% sort(decreasing = T) %>% head(n=1000) %>% boxplot()
rowSds(as.matrix(filtered_tpms)) %>% sort(decreasing = T) %>% head(n=1000) %>% boxplot()
rowSds(as.matrix(filtered_tpms)) %>% sort(decreasing = T) %>% head(n=1000) %>% hist()
rowSds(as.matrix(filtered_tpms)) %>% sort(decreasing = T) %>% head(n=1000) %>% class()
rowSds(as.matrix(filtered_tpms)) %>% sort(decreasing = T) %>% head(n=1000) %>% hist()
?rowSds
top_sd_genes <- rowSds(as.matrix(filtered_tpms)) %>% sort(decreasing = T) %>% slice(1:1000)
rowSds(as.matrix(filtered_tpms)) %>% sort(decreasing = T)
rowSds(as.matrix(filtered_tpms)) %>% sort(decreasing = T) %>% names()
top_tpms <- filtered_tpms[top_sd_genes[1:1000]]
top_sd_genes <- rowSds(as.matrix(filtered_tpms)) %>% sort(decreasing = T) %>% names()
top_tpms <- filtered_tpms[top_sd_genes[1:1000,]]
filtered_tpms
filtered_tpms[1,]
filtered_tpms['ENSG00000000003.16',]
top_tpms <- filtered_tpms[top_sd_genes[1:1000],]
View(top_tpms)
km <- kmeans(t(as.matrix(top_tpms)), centers = 4, iter = 1000)
km$cluster
?fviz_nbclust
??fviz_nbclust
install.packages('factoextra')
library(factoextra)
fviz_nbclust(as.matrix(filtered_tpms), kmeans, method = "wss")
?fviz_nbclust
fviz_nbclust(as.matrix(filtered_tpms), kmeans, method = "wss", k.max=6)
gc()
fviz_nbclust(as.matrix(filtered_tpms), kmeans, method = "wss", k.max=6)
fviz_nbclust(as.matrix(filtered_tpms), kmeans, method = "wss", k.max=6)
gc()
top_tpms <- filtered_tpms[top_sd_genes[1:10000],]
km <- kmeans(t(as.matrix(top_tpms)), centers = 4, iter = 1000)
fviz_nbclust(as.matrix(top_tpms), kmeans, method = "wss", k.max=6)
gc()
head(tpms)
results <- ConsensusClusterPlus(d=as.matrix(filtered_tpms), maxK = 10, reps=50, pItem=0.7)
icl  <-  calcICL(results,title='conc_clust',plot="png")
results <- ConsensusClusterPlus(d=as.matrix(filtered_tpms), maxK = 10, reps=50, pItem=0.7)
icl  <-  calcICL(results,title='clust',plot="png")
,ConsensusClusterPlus
?ConsensusClusterPlus
results <- ConsensusClusterPlus(d=as.matrix(filtered_tpms), maxK = 10, reps=100, pItem=0.7, clusterAlg="hc", title="consensus_cluster")
ConsensusClusterPlus(d=as.matrix(filtered_tpms), maxK = 10, reps=100, pItem=0.7, clusterAlg="hc", title="consensus_cluster")
results <- ConsensusClusterPlus(d=as.matrix(filtered_tpms), maxK = 10, reps=100, pItem=0.7, clusterAlg="hc", title="consensus_cluster", plot='png')
library(SummarizedExperiment)
library(tidyverse)
library(ConsensusClusterPlus)
salmon_output <- readRDS('all_samples_gene.SummarizedExperiment.rds')
setwd('../multioms')
library(SummarizedExperiment)
library(tidyverse)
library(ConsensusClusterPlus)
salmon_output <- readRDS('all_samples_gene.SummarizedExperiment.rds')
tpms <- assay(salmon_output)
filtered_tpms <- tpms %>% filter((rowSums(tpms==0)/ncol(tpms))<0.3)
scaled_tpms <- log2(filtered_tpms+1) %>% scale()
top_sd_genes <- rowSds(scaled_tpms) %>% sort(decreasing = T) %>% names()
cutoff <- 1000
top_scaled_tpms <- scaled_tpms[top_sd_genes[1:cutoff],]
top_tpms <- filtered_tpms[top_sd_genes[1:cutoff],]
res1 <- ConsensusClusterPlus(d=as.matrix(top_tpms), maxK = 10, reps=100, pItem=0.7, clusterAlg="hc", title="cons_clusters", plot='png')
res2 <- ConsensusClusterPlus(d=as.matrix(top_scaled_tpms), maxK = 10, reps=100, pItem=0.7, clusterAlg="hc", title="sacled_clusters", plot='png')
km <- kmeans(t(as.matrix(top_tpms)), centers = 4, iter.max = 1000, nstart = 25)
km_scale <- kmeans(t(scaled_tpms), centers = 4, iter.max = 1000, nstart = 25)
data.frame(km$cluster, km_scale$cluster) %>% table()
km_scale$iter
?kmeans
gc()
km <- kmeans(t(as.matrix(top_tpms)), centers = 4, iter.max = 1000, nstart = 50)
km_scale <- kmeans(t(scaled_tpms), centers = 4, iter.max = 1000, nstart = 50)
km_scale$iter
data.frame(km$cluster, km_scale$cluster) %>% table()
km <- kmeans(t(as.matrix(top_tpms)), centers = 4, iter.max = 1000, nstart = 50)
data.frame(km$cluster, km_scale$cluster) %>% table()
km_scale$cluster %>% table()
km$cluster %>% table()
scaled_tpms <- log2(filtered_tpms+1) #%>% scale()
top_sd_genes <- rowSds(scaled_tpms) %>% sort(decreasing = T) %>% names()
scaled_tpms <- log2(filtered_tpms+1) %>% as.matrix()#%>% scale()
top_sd_genes <- rowSds(scaled_tpms) %>% sort(decreasing = T) %>% names()
cutoff <- 1000
top_scaled_tpms <- scaled_tpms[top_sd_genes[1:cutoff],]
top_tpms <- filtered_tpms[top_sd_genes[1:cutoff],]
res1 <- ConsensusClusterPlus(d=as.matrix(top_tpms), maxK = 10, reps=100, pItem=0.7, clusterAlg="hc", title="cons_clusters", plot='png')
res2 <- ConsensusClusterPlus(d=as.matrix(top_scaled_tpms), maxK = 10, reps=100, pItem=0.7, clusterAlg="hc", title="sacled_clusters", plot='png')
km <- kmeans(t(as.matrix(top_tpms)), centers = 4, iter.max = 1000, nstart = 25)
km_scale <- kmeans(t(scaled_tpms), centers = 4, iter.max = 1000, nstart = 25)
data.frame(km$cluster, km_scale$cluster) %>% table()
res1 <- ConsensusClusterPlus(d=as.matrix(top_tpms), maxK = 10, reps=100, pItem=0.7, clusterAlg="hc", title="cons_clusters", plot='png')
res2 <- ConsensusClusterPlus(d=as.matrix(top_scaled_tpms), maxK = 10, reps=100, pItem=0.7, clusterAlg="hc", title="sacled_clusters", plot='png')
res2 <- ConsensusClusterPlus(d=as.matrix(top_scaled_tpms), maxK = 10, reps=100, pItem=0.8, clusterAlg="hc", title="sacled_clusters", plot='png')
res3 <- ConsensusClusterPlus(d=as.matrix(filtered_tpms), maxK = 10, reps=100, pItem=0.8, clusterAlg="hc", title="filtered_clusters", plot='png')
cutoff <- 5000
top_scaled_tpms <- scaled_tpms[top_sd_genes[1:cutoff],]
top_tpms <- filtered_tpms[top_sd_genes[1:cutoff],]
res1 <- ConsensusClusterPlus(d=as.matrix(top_tpms), maxK = 10, reps=100, pItem=0.8, clusterAlg="hc", title="cons_clusters", plot='png')
res2 <- ConsensusClusterPlus(d=as.matrix(top_scaled_tpms), maxK = 10, reps=100, pItem=0.8, clusterAlg="hc", title="sacled_clusters", plot='png')
res3 <- ConsensusClusterPlus(d=as.matrix(filtered_tpms), maxK = 10, reps=100, pItem=0.8, clusterAlg="hc", title="filtered_clusters", plot='png')
cutoff <- 2000
top_scaled_tpms <- scaled_tpms[top_sd_genes[1:cutoff],]
top_tpms <- filtered_tpms[top_sd_genes[1:cutoff],]
res1 <- ConsensusClusterPlus(d=as.matrix(top_tpms), maxK = 10, reps=100, pItem=0.8, clusterAlg="hc", title="cons_clusters", plot='png')
res2 <- ConsensusClusterPlus(d=as.matrix(top_scaled_tpms), maxK = 10, reps=100, pItem=0.8, clusterAlg="hc", title="sacled_clusters", plot='png')
res3 <- ConsensusClusterPlus(d=as.matrix(filtered_tpms), maxK = 10, reps=100, pItem=0.8, clusterAlg="hc", title="filtered_clusters", plot='png')
res1 <- ConsensusClusterPlus(d=as.matrix(top_tpms), maxK = 10, reps=100, pItem=0.8, clusterAlg="hc", title="top_clusters", plot='png')
res2 <- ConsensusClusterPlus(d=as.matrix(top_scaled_tpms), maxK = 10, reps=100, pItem=0.8, clusterAlg="hc", title="sacled_clusters", plot='png')
res3 <- ConsensusClusterPlus(d=as.matrix(filtered_tpms), maxK = 10, reps=100, pItem=0.8, clusterAlg="hc", title="filtered_clusters", plot='png')
res3
View(res3)
res3[[4]]$consensusClass
res3[[4]]$consensusMatrix
res3[[4]]$consensusTree
res3[[4]]$ml
res3[[4]]$clrs
res3[[4]]$consensusMatrix
res3[[4]]$consensusClass
data.frame(res3[[4]]$consensusClass, km_scale$cluster) %>% table()
data.frame(res3[[4]]$consensusClass, km$cluster) %>% table()
data.frame(res3[[4]]$consensusClass, km_scale$cluster)
res3[[4]]$consensusClass
km_scale$cluster
data.frame(res3[[4]]$consensusClass, km_scale$cluster) %>% table()
?set_names
klasses <- data.frame(km$cluster, km_scale$cluster, res3[[4]]$consensusClass) %>% set_names(c('top', 'scaled_top', 'cons'))
klasses %>% table()
klasses
klasses %>% select(1,2) %>% table()
View(klasses)
apply(klasses, table)
apply(klasses, FUN=table)
sapply(klasses, table)
km_scale <- kmeans(t(scaled_tpms), centers = 4, iter.max = 1000, nstart = 50)
klasses <- data.frame(km$cluster, km_scale$cluster, res3[[4]]$consensusClass) %>% set_names(c('top', 'scaled_top', 'cons'))
km_scale <- kmeans(t(scaled_tpms), centers = 4, iter.max = 1000, nstart = 50)
sapply(klasses, table)
km_scale <- kmeans(t(scaled_tpms[top_sd_genes[1:cutoff],]), centers = 4, iter.max = 1000, nstart = 50)
klasses <- data.frame(km$cluster, km_scale$cluster, res3[[4]]$consensusClass) %>% set_names(c('top', 'scaled_top', 'cons'))
sapply(klasses, table)
data.frame(km$cluster, km_scale$cluster) %>% table()
BiocManager::install("genefu")
BiocManager::install("sva")
BiocManager::install("GSVA")
class(t(filtered_tpms))
pca <- prcomp(t(scaled_tpms), scale=T)
pca$x
as.data.frame(pca$x[, 1:3]) %>% rownames_to_column("Sample")
design <- data.frame(km_scale$cluster)
design
design <- data.frame(km_scale$cluster) %>% rownames_to_column("Sample")
pca_data <- as.data.frame(pca$x[, 1:3]) %>% rownames_to_column("Sample") %>%
left_join(design, by='Sample')
pca_data
barplot_data <- data.frame(Component = paste0('PC', 1:length(pca$sdev)),
Standart_Deviation = pca$sdev)
ggplot(barplot_data[1:9,], aes(x = Component, y = Standart_Deviation)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
labs(x = "Principal Component", y = "Standart Deviation") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
filtered_var <- paste0("PC", 1:length(pca$sdev), ' ', round(pca$sdev / sum(pca$sdev)))
ggplot(pca_data, aes(x = PC1, y = PC2, color = as.factor(Condition))) +
geom_point(aes(label = rownames(pca_data)), pch = 19, size = 3) +
labs(x = filtered_var[1], y = filtered_var[2]) +
theme_minimal() +
ggtitle("PCA plot") +
geom_text(aes(label = Sample), vjust = -0.5, hjust = 0.5) +
labs(colour = "Condition")
rownames(pca_data)
pca_data
ggplot(pca_data, aes(x = PC1, y = PC2, color = as.factor(Condition))) +
geom_point(aes(label = pca_data$Sample), pch = 19, size = 3) +
labs(x = filtered_var[1], y = filtered_var[2]) +
theme_minimal() +
ggtitle("PCA plot") +
geom_text(aes(label = Sample), vjust = -0.5, hjust = 0.5) +
labs(colour = "Condition")
design <- data.frame(km_scale$cluster) %>% rownames_to_column("Sample") %>% rename('km_scale.cluster'="Condition")
design <- data.frame(km_scale$cluster) %>% rownames_to_column("Sample") %>% rename('km_scale.cluster'=="Condition")
design <- data.frame(km_scale$cluster) %>% rownames_to_column("Sample") %>% rename("Condition"='km_scale.cluster')
filtered_var <- paste0("PC", 1:length(pca$sdev), ' ', round(pca$sdev / sum(pca$sdev)))
ggplot(pca_data, aes(x = PC1, y = PC2, color = as.factor(Condition))) +
geom_point(aes(label = pca_data$Sample), pch = 19, size = 3) +
labs(x = filtered_var[1], y = filtered_var[2]) +
theme_minimal() +
ggtitle("PCA plot") +
geom_text(aes(label = Sample), vjust = -0.5, hjust = 0.5) +
labs(colour = "Condition")
ggplot(pca_data, aes(x = PC1, y = PC2, color = as.factor(Condition))) +
geom_point(pch = 19, size = 3) +
labs(x = filtered_var[1], y = filtered_var[2]) +
theme_minimal() +
ggtitle("PCA plot") +
geom_text(aes(label = Sample), vjust = -0.5, hjust = 0.5) +
labs(colour = "Condition")
design
pca <- prcomp(t(scaled_tpms), scale=T)
pca_data <- as.data.frame(pca$x[, 1:3]) %>% rownames_to_column("Sample") %>%
left_join(design, by='Sample')
barplot_data <- data.frame(Component = paste0('PC', 1:length(pca$sdev)),
Standart_Deviation = pca$sdev)
ggplot(barplot_data[1:9,], aes(x = Component, y = Standart_Deviation)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
labs(x = "Principal Component", y = "Standart Deviation") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
filtered_var <- paste0("PC", 1:length(pca$sdev), ' ', round(pca$sdev / sum(pca$sdev)))
ggplot(pca_data, aes(x = PC1, y = PC2, color = as.factor(Condition))) +
geom_point(pch = 19, size = 3) +
labs(x = filtered_var[1], y = filtered_var[2]) +
theme_minimal() +
ggtitle("PCA plot") +
geom_text(aes(label = Sample), vjust = -0.5, hjust = 0.5) +
labs(colour = "Condition")
?DESeq
A?DESeqDataSetFromMatrix
?DESeqDataSetFromMatrix
??DESeqDataSetFromMatrix
BiocManager::install("DESeq2")
library(DESeq2)
class(filtered_tpms)
#DESeq
dds <- DESeqDataSetFromMatrix(as.matrix(filtered_tpms), design, design= ~Cluster)
as.matrix(filtered_tpms)\
as.matrix(filtered_tpms)
filtered_tpms %>% as.integer()
dds <- filtered_tpms %>% mutate(across(where(is.numeric), as.integer) %>% as.matrix() %>% DESeqDataSetFromMatrix(design, design= ~Cluster)
1
dds <- filtered_tpms %>% mutate(across(where(is.numeric), as.integer)) %>% as.matrix() %>% DESeqDataSetFromMatrix(design, design= ~Cluster)
filtered_tpms %>% mutate(across(where(is.numeric), as.integer))
filtered_tpms %>% mutate(across(where(is.numeric), as.integer)) %>% as.matrix()
dds <- filtered_tpms %>% mutate(across(where(is.numeric), as.integer)) %>% as.matrix() %>% DESeqDataSetFromMatrix(design, design= ~Cluster)
dds <- filtered_tpms %>% mutate(across(where(is.numeric), as.integer)) %>% as.matrix() %>% DESeqDataSetFromMatrix(., design, design= ~Cluster)
design
design <- data.frame(km_scale$cluster) %>% rownames_to_column("Sample") %>% rename("Cluster"='km_scale.cluster') %>% mutate(Cluster=as.factor(Cluster))
dds <- filtered_tpms %>% mutate(across(where(is.numeric), as.integer)) %>% as.matrix() %>% DESeqDataSetFromMatrix(., design, design= ~Cluster)
dds <- DESeq(dds)
res <- results(dds) %>% as.data.frame()
res
View(res)
dds
View(dds)
dds
?DESeq2
results(dds)
design
design$Cluster
design$Cluster[1]
design$Cluster[[1]]
design$Cluster['1']
design$Cluster['1']
design$Cluster['2']
design$Cluster$1
design$Cluster[2]
design$Cluster %>% levels()
design$Cluster["2"]
results(dds) %>% as.data.frame() %>% mutate(rank=sign(log2FoldChnage))
sign(res$log2FoldChange)
?arrange
res_w_rank <- res %>% mutate(rank=sign(log2FoldChange)*log10(pvalue)) %>% arrange(desc(rank))
View(res_w_rank)
top_rank <- res %>% mutate(rank=sign(log2FoldChange)*log10(pvalue)) %>% arrange(desc(rank)) %>% filter(abs(rank)>2)
top_rank <- res %>% mutate(rank=sign(log2FoldChange)*log10(pvalue)) %>% arrange(desc(rank)) %>% filter(abs(rank)>10)
View(top_rank)
